spring.application.name=annotation

# 서버 포트 변경
server.port=8090
 
# JSP ViewResolver
#spring.mvc.view.prefix=/WEB-INF/views/
#spring.mvc.view.suffix=.jsp
#spring.mvc.view.cache=false 
 
# JDBC + MyBatis
spring.datasource.dbcp2.driver-class-name=oracle.jdbc.driver.OracleDriver
spring.datasource.url=jdbc:oracle:thin:@192.168.10.191:1521/orcl
spring.datasource.username=gerp
spring.datasource.password=gerp9639
 
# 최소 커넥션 객체 5개를 대기중으로 만든다.(pool에서 관리하는 최소 유휴 connection의 수에 관한 설정)
spring.datasource.hikari.minimum-idle=5
# 내부적으로 커넥션 객체를 최대 20개까지 만들어서 관리하겠다.(유휴한 connection과 사용중인 connection을 포함하여 pool의 크기 설정)
spring.datasource.hikari.maximum-pool-size=20
# connection이 유휴 상태로 남을 수 있는 최대시간(밀리초, ms) 설정
spring.datasource.hikari.idle-timeout=30000
# 하나의 객체를 1년 내내 살려두면 문제가 되는 경우가 있어서 주기적으로 바꾸는데 최장 얼마까지 살려둘거냐 라는 의미(connection의 최대 유지시간에 관한 설정. 
# 이 시간이 지난 connection 중에서 사용중인 connection은 connection이 종료된 이후에 pool에서 제거가 된다. 0으로 설정하면 무한 수명을 의미.)
spring.datasource.hikari.max-lifetime=2000000
# 클라이언트가 pool의 connection을 기다리는 최대 시간(밀리초, ms)에 관한 설정. 만일 최대 시간을 넘으면 SQL Exception 발생)
spring.datasource.hikari.connection-timeout=30000
 
mybatis.mapper-locations=classpath:/mapper/*.xml

# classpath: src/java 와 같은 resource를 폴더를 말한다. 도메인 DATA값 위치 
mybatis.type-aliases-package=com.gerp.qms.domain

# Thymeleaf
spring.thymeleaf.enabled=true
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.mode=HTML
spring.thymeleaf.check-template=true
spring.thymeleaf.check-template-location=true
# 이 위까지 기본값

# 세션 타임아웃 설정 (초 단위, 30분) 
server.servlet.session.timeout=30m

# 애플리케이션 재시작 활성화
spring.devtools.restart.enabled=true

# LiveReload 활성화 (브라우저 자동 새로고침)
spring.devtools.livereload.enabled=true


# 기본값(true) > 개발 중일때만 (false)
spring.thymeleaf.cache=false

logging.level.org.springframework.boot.devtools=DEBUG




